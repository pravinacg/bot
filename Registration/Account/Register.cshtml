@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
   

  
}

@{
    // Layout = "~/_SiteLayoutLogin.cshtml";

    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Register";

    // Initialize general page variables
    var eventname = "";
    var orgnaisation = "";
    var eventdate = "";
    var description = "";
    var email = "";
    var user = WebSecurity.CurrentUserId;
    var mobile = "";
    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Account/Login-desktop");

    }


    if (IsPost)
    {
        //AntiForgery.Validate();
        eventname = Request.Form["EventName"];
        orgnaisation = Request.Form["orgnisation"];
        eventdate = Request.Form["EventDate"];
        description = Request.Form["description"];
        email = Request.Form["email"];
        mobile = Request.Form["mobile"];

        Validation.RequireField("email", "You must specify an email address.");
        Validation.RequireField("EventName", "You must specify a Event Name.");
        Validation.RequireField("Mobile","You must specify a Mobile.");
        Validation.RequireField("EventDate", "You must specify a Event Date.");
        Validation.RequireField("orgnisation", "You must specify Orgnisation Name.");

        Validation.Add("mobile", Validator.Integer("must be numeric"));

        Validation.Add("mobile",Validator.StringLength(maxLength: Int32.MaxValue,minLength: 10,errorMessage: "Mobile must be at least 9 characters"));

        if( DateTime.Parse(eventdate) <= DateTime.Now)
        {
            Validation.AddFormError("Registratio date can not be past or todays date");
        }

        if (Validation.IsValid())
        {
            try
            {
                var db = Database.Open("StarterSite");            // Check if user already exists
                                                                  // Insert email into the profile table
                int count = db.Execute("INSERT INTO [dbo].[EventBooking] ([EventName],[CompanyName],[EventDate],[Location],[email],[MobileNumber])" +
                " VALUES('" + eventname + "','" + orgnaisation + "','" + eventdate + "','" + description + "','" + email + "','"+mobile+"')");

                if (count == 1)
                {
                    Response.Redirect("~/Account/Thanks");

                }

            }
            catch (Exception ex)
            {
                ModelState.AddFormError(ex.Message);
            }
        }

    }
    }


    <hgroup class="col-sm-10 offset-sm-1 text-center">
        @*<h1>@Page.Title.</h1>*@
        <h2>Register for Event</h2>
     

    </hgroup>


<section id="cover">
    <div id="cover-caption">
        <div id="container" class="container">
            <div class="row text-white">
                <div class="col-sm-10 offset-sm-1 text-center">
                    <div class="info-form">
                        @AntiForgery.GetHtml()
                        @* If at least one validation error exists, notify the user *@
                        @Html.ValidationSummary("Registration was unsuccessful. Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null)

                        <br />
                        <br />
                        <form method="post" style="color:white" class="form justify-content-center">
                            <div class="form-group">
                                <label for="EventName" @if (!ModelState.IsValidField("EventName")) { <text> class="form-label" </text> }>Event Name</label>
                                <input type="text" id="EventName" class="form-control transparent-input  text-center" name="EventName" value="@eventname" @Validation.For("EventName") />
                                @* Write any email validation errors to the page *@
                                @Html.ValidationMessage("eventname")
                            </div>
                            <hr />

                            <div class="form-group">
                                <label for="email" @if (!ModelState.IsValidField("email")) { <text> </text> }>Email address</label>
                                <input type="text" id="email" class="form-control transparent-input text-center" name="email" value="@email" @Validation.For("email") />
                                @* Write any email validation errors to the page *@
                                @Html.ValidationMessage("email")
                            </div>
                            <hr />

                            <div class="form-group">
                                <label for="mobile" @if (!ModelState.IsValidField("mobile")) { <text> </text> }>Mobile</label>
                                <input type="text" id="mobile" inputmode="numeric" maxlength="10" class="form-control transparent-input text-center"
                                       name="mobile" value="@mobile" @Validation.For("mobile") />
                                @* Write any email validation errors to the page *@
                                @Html.ValidationMessage("mobile")
                            </div>
                            <hr />

                            <div class="form-group">

                                <label for="Description" @if (!ModelState.IsValidField("description")) { <text> class="form-label" </text> }>description</label>
                                <input type="text" id="Description" class="form-control transparent-input text-center" name="Description" @Validation.For("description") />
                                @* Write any password validation errors to the page *@
                                @Html.ValidationMessage("Description")
                            </div>
                            <hr />

                            <div class="form-group">
                                <label for="Orgnisation" @if (!ModelState.IsValidField("Orgnisation")) { <text> class="form-label" </text> }>Orgnisation</label>
                                <input type="text" id="Orgnisation" class="form-control transparent-input text-center" name="Orgnisation" @Validation.For("orgnisation") />
                                @Html.ValidationMessage("Orgnisation")
                            </div>
                            <hr />

                            <div class="form-group">
                                <label for="eventDate" @if (!ModelState.IsValidField("eventdate")) { <text> class="form-label" </text> }> Event Date</label>
                                <input type="date" class="form-control transparent-input text-center" id="EventDate" name="EventDate" @Validation.For("eventdate") />
                                @Html.ValidationMessage("eventdate")
                            </div>
                            <hr />


                            @*<div class="message-info">
                                <p>
                                    To enable CAPTCHA verification, <a href="https://go.microsoft.com/fwlink/?LinkId=204140">
                                        install the
                                        ASP.NET Web Helpers Library
                                    </a> and uncomment ReCaptcha.GetHtml and replace 'PUBLIC_KEY'
                                    with your public key. At the top of this page, uncomment ReCaptcha. Validate and
                                    replace 'PRIVATE_KEY' with your private key.
                                    Register for reCAPTCHA keys at <a href="http://recaptcha.net">reCAPTCHA.net</a>.
                                </p>
                            </div>
                            <hr />*@
                            <br />
                            <br />
                            <div class="form-group">
                                <input type="submit" class="btn btn-default" id="Register" name="Register" value="Register" />
                            </div>
                            


                        </form>
                    </div>
                    <br>
                    <a href="#nav-main" class="btn btn-outline-secondary btn-sm" role="button">
                        
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="row justify-content-center">

    
</div>


