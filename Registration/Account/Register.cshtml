@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Register";

    // Initialize general page variables
    var eventname = "";
    var orgnaisation = "";
    var eventdate = "";
    var description = "";
    var email = "";
    var user = WebSecurity.CurrentUserId;

    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Account/Login-desktop");

    }



    if (IsPost)
    {
        AntiForgery.Validate();
        eventname = Request.Form["EventName"];
        orgnaisation = Request.Form["orgnisation"];
        eventdate = Request.Form["EventDate"];
        description = Request.Form["description"];
        email = Request.Form["email"];

        if (Validation.IsValid())
        {
            try
            {
                var db = Database.Open("StarterSite");            // Check if user already exists
                                                                  // Insert email into the profile table
                int count = db.Execute("INSERT INTO [dbo].[mBooking] ([EventName],[Orgnaisation],[EventDate],[Description],[email])" +
                " VALUES('" + eventname + "','" + orgnaisation + "','" + eventdate + "','" + description + "','" + user + "')");

                if (count == 1)
                {
                    Response.Redirect("~/Account/Thanks");

                }

            }
            catch (Exception ex)
            {
                ModelState.AddFormError(ex.Message);
            }
        }

    }
}


<hgroup class="title">
    <h1>@Page.Title.</h1>
    <h2>Create a new account.</h2>
</hgroup>

<form method="post">
    @AntiForgery.GetHtml()
    @* If at least one validation error exists, notify the user *@
    @Html.ValidationSummary("Account creation was unsuccessful. Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null)

    <fieldset>
        <legend>Registration Form</legend>
        <ol>
            <li class="email">
                <label for="email" @if (!ModelState.IsValidField("email")) { <text> class="error-label" </text> }>Email address</label>
                <input type="text" id="email" name="email" value="@email" @Validation.For("email") />
                @* Write any email validation errors to the page *@
                @Html.ValidationMessage("email")
            </li>
            <li class="eventname">
                <label for="EventName" @if (!ModelState.IsValidField("EventName")) { <text> class="error-label" </text> }>Event Name</label>
                <input type="text" id="EventName" name="EventName" value="@eventname" @Validation.For("EventName") />
                @* Write any email validation errors to the page *@
                @Html.ValidationMessage("eventname")
            </li>
            <li class="Description">
                <label for="Description" @if (!ModelState.IsValidField("description")) { <text> class="error-label" </text> }>description</label>
                <input type="text" id="Description" name="Description" @Validation.For("description") />
                @* Write any password validation errors to the page *@
                @Html.ValidationMessage("Description")
            </li>
            <li class="Orgnisation">
                <label for="Orgnisation" @if (!ModelState.IsValidField("Orgnisation")) { <text> class="error-label" </text> }>Orgnisation</label>
                <input type="text" id="Orgnisation" name="Orgnisation" @Validation.For("orgnisation") />
                @* Write any password validation errors to the page *@
                @Html.ValidationMessage("Orgnisation")
            </li>

            <li class="eventdate">
                <label for="eventDate" @if (!ModelState.IsValidField("eventdate")) { <text> class="error-label" </text> }> Event Date</label>
                <input type="date" id="EventDate" name="EventDate" @Validation.For("eventdate") />
                @* Write any password validation errors to the page *@
                @Html.ValidationMessage("eventdate")
            </li>
            <li class="recaptcha">
                <div class="message-info">
                    <p>
                        To enable CAPTCHA verification, <a href="https://go.microsoft.com/fwlink/?LinkId=204140">
                            install the
                            ASP.NET Web Helpers Library
                        </a> and uncomment ReCaptcha.GetHtml and replace 'PUBLIC_KEY'
                        with your public key. At the top of this page, uncomment ReCaptcha. Validate and
                        replace 'PRIVATE_KEY' with your private key.
                        Register for reCAPTCHA keys at <a href="http://recaptcha.net">reCAPTCHA.net</a>.
                    </p>
                </div>
                @*
                    @ReCaptcha.GetHtml("PUBLIC_KEY", theme: "white")
                    @Html.ValidationMessage("recaptcha")
                *@
            </li>
        </ol>
        <input type="submit" value="Register" />
    </fieldset>
</form>


